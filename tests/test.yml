---
- name: Setup
  hosts: localhost
  connection: local
  gather_facts: False
  vars:
    digital_ocean_token: "{{ lookup('env', 'DO_API_TOKEN') }}"
    role_name: haproxy
    test_do_instances:
      - name: "ubuntu1604-{{ role_name }}-test"
        image_slug: ubuntu-16-10-x64
      - name: "debian8-{{ role_name }}-test"
        image_slug: debian-8-x64
      - name: "ubuntu1610-{{ role_name }}-test"
        image_slug: ubuntu-16-04-x64
      - name: "centos7-{{ role_name }}-test"
        image_slug: centos-7-x64
      - name: "fedora25-{{ role_name }}-test"
        image_slug: fedora-25-x64

  tasks:
    - debug: msg="Running on {{ lookup('file', '/etc/hostname') }}"

    - name: add temp ssh key
      digital_ocean:
        api_token: "{{ digital_ocean_token }}"
        state: present
        command: ssh
        name: temp_key
        ssh_pub_key: "{{ lookup('file', '~/.ssh/file.rsa.pub') }}"
      register: do_ssh_key

    - name: Start digital_ocean instance
      digital_ocean:
        api_token: "{{ digital_ocean_token }}"
        command: droplet
        image_id: "{{ item.image_slug }}"
        region_id: sfo2
        size_id: 512mb
        unique_name: yes
        ssh_key_ids:
          - 6379146
          - "{{ do_ssh_key.ssh_key.id }}"
        name: "{{ item.name }}"
        state: active
      with_items: "{{ test_do_instances }}"
      register: do_instances

    - name: Tag test instances
      digital_ocean_tag:
        api_token: "{{ digital_ocean_token }}"
        resource_id: "{{ item.droplet.id }}"
        name: "test-{{ role_name }}-instance"
      with_items: "{{ do_instances.results }}"

    - name: Add instances to host group
      add_host:
        hostname: "{{ item.droplet.name }}"
        ansible_host: "{{ item.droplet.ip_address }}"
        ansible_user: root
        ansible_private_key_file: ~/.ssh/file.rsa
        groups: "docker,digital_ocean,{{ item.droplet.image.distribution|lower }}"
      with_items: "{{ do_instances.results }}"

    - name: Wait for SSH to come up
      wait_for:
        host: "{{ item.droplet.ip_address }}"
        port: 22
        delay: 5
        timeout: 320
        state: started
      with_items: "{{ do_instances.results }}"

- name: Ensure python is installed
  hosts: all
  gather_facts: false

  tasks:
    - name: install python Debian/Ubuntu
      raw: sudo apt update && sudo apt install -y python
      when: ('debian' in group_names or 'ubuntu' in group_names)
      ignore_errors: true

    - name: install python CentOS
      raw: sudo yum install -y python
      when: "'centos' in group_names"
      ignore_errors: true

    - name: install python Fedora
      raw: sudo dnf install -y python
      when: "'fedora' in group_names"
      ignore_errors: true

- name: Test role
  hosts: all
  vars:
    haproxy_frontends:
      - name: www-frontend
        bind:
          - name: http
            address: "*"
            port_range: 80
        mode: http
        maxconn: 2048
        options:
          - forwardfor
        default_backend: jenkins

    haproxy_backends:
      - name: jenkins
        description: Jenkins CI/CD Server
        balance: roundrobin
        servers:
          - name: jenkins
            ip: localhost
            port: 8080
            params:
              - cookie
              - check
        options:
          - forwardfor
  roles:
    - ansible-haproxy
